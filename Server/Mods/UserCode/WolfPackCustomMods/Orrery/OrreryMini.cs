// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from WorldObjectTemplate.tt />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Core.Items;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Components.Auth;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Economy;
    using Eco.Gameplay.Housing;
    using Eco.Gameplay.Interactions;
    using Eco.Gameplay.Interactions.Interactors;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Minimap;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Occupancy;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Property;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Gameplay.Pipes.LiquidComponents;
    using Eco.Gameplay.Pipes.Gases;
    using Eco.Shared;
    using Eco.Shared.Math;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Shared.Items;
    using Eco.Shared.Networking;
    using Eco.Gameplay.Pipes;
    using Eco.World.Blocks;
    using Eco.Gameplay.Housing.PropertyValues;
    using Eco.Gameplay.Civics.Objects;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems.NewTooltip;
    using Eco.Core.Controller;
    using Eco.Core.Utils;
    using Eco.Gameplay.Components.Storage;
    using static Eco.Gameplay.Housing.PropertyValues.HomeFurnishingValue;
    using static Eco.Gameplay.Components.PartsComponent;
    using Eco.Gameplay.Items.Recipes;
    using Eco.Shared.SharedTypes;



    //Object


    [Serialized]
    [RequireComponent(typeof(OnOffComponent))]    
    [RequireComponent(typeof(PropertyAuthComponent))]
    [RequireComponent(typeof(HousingComponent))]
    [RequireComponent(typeof(OccupancyRequirementComponent))]
    [RequireComponent(typeof(PowerGridComponent))]
    [RequireComponent(typeof(PowerConsumptionComponent))]
    [RequireComponent(typeof(ForSaleComponent))]
    [RequireComponent(typeof(PartsComponent))]
    [RequireComponent(typeof(RoomRequirementsComponent))]
    [RequireRoomContainment]
    [RequireRoomVolume(9)]
    [Tag("Usable")]
    [Ecopedia("Housing Objects", "Living Room", subPageName: "Orrery Mini Item")]
    [RepairRequiresSkill(typeof(BasicEngineeringSkill), 2)]
    [RepairRequiresSkill(typeof(SelfImprovementSkill), 5)]
    public partial class OrreryMiniObject : WorldObject, IRepresentsItem, IHasInteractions
    {
       
        

        public virtual Type RepresentedItemType => typeof(OrreryMiniItem);
        public override LocString DisplayName => Localizer.DoStr("Orrery Mini");
        public override TableTextureMode TableTexture => TableTextureMode.Stone;

        static OrreryMiniObject()
        {

            WorldObject.AddOccupancy<OrreryMiniObject>(new List<BlockOccupancy>(){
            new BlockOccupancy(new Vector3i(0, 0, 0)),
            new BlockOccupancy(new Vector3i(0, 1, 0)),
            });
        }


        class OrreryMiniMessagesContainer : OnOffComponent.IOnOffMessagesContainer
        {
            public LocString TurnOnMessage => Localizer.DoStr("Off");
            public LocString TurnOffMessage => Localizer.DoStr("On");
            public LocString TurnedOnMessage => Localizer.DoStr("Off");
            public LocString TurnedOffMessage => Localizer.DoStr("On");
            public LocString NotAuthedMessage => Localizer.DoStr("You are not authorized to On/Off this Orrery Mini.");
            public LocString InvalidStatusMessage => Localizer.DoStr("This Orrery Mini has an invalid status and cannot ineract.");
        }

        static OrreryMiniMessagesContainer msgContainer = new OrreryMiniMessagesContainer();
        

        protected override void Initialize()
        {
            
            this.ModsPreInitialize();
            this.GetComponent<OnOffComponent>().Setup(null, AccessType.ConsumerAccess, true, msgContainer);                      
            this.GetComponent<HousingComponent>().HomeValue = OrreryMiniItem.homeValue;
            this.GetComponent<PowerConsumptionComponent>().Initialize(20);           
            this.GetComponent<PowerGridComponent>().Initialize(10, new MechanicalPower());
            this.ModsPostInitialize();
                    {
                this.GetComponent<PartsComponent>().Config(() => LocString.Empty, new PartInfo[]
                                    {
                                        new() { TypeName = nameof(WoodenGearItem), Quantity = 2},
                                        new() { TypeName = nameof(LubricantItem), Quantity = 1},
                                    });
                this.GetComponent<PowerGridComponent>().DurabilityUsedPerHourOfUse = .1f;
            }
        }


        

        





        partial void ModsPreInitialize();
     
        partial void ModsPostInitialize();

        
    }





    //Item


    [Serialized]
    [LocDisplayName("Orrery Mini")]
    [LocDescription("An Orrery Mini is a Miniature mechanical model of the Solar System that shows the relative positions and motions of the planets and moons according to the heliocentric (Sun-centred) model.")]
    [Ecopedia("Housing Objects", "Living Room", createAsSubPage: true)]
    [Tag("Housing")]
    [Weight(1500)]
    public partial class OrreryMiniItem : WorldObjectItem<OrreryMiniObject>
    {
        
        protected override OccupancyContext GetOccupancyContext => new SideAttachedContext(0 | DirectionAxisFlags.Down, WorldObject.GetOccupancyInfo(this.WorldObjectType));
        public override HomeFurnishingValue HomeValue => homeValue;
        public static readonly HomeFurnishingValue homeValue = new HomeFurnishingValue()
        {
            ObjectName = typeof(OrreryMiniObject).UILink(),
            Category = HousingConfig.GetRoomCategory("Living Room"),
            BaseValue = 5,
            TypeForRoomLimit = Localizer.DoStr("Orrery"),
            DiminishingReturnMultiplier = 0.01f
        };


        [NewTooltip(CacheAs.SubType, 7)] public static LocString PowerConsumptionTooltip() => Localizer.Do($"Consumes: {Text.Info(20)}w of {new MechanicalPower().Name} power.");
        [Serialized, SyncToView, NewTooltipChildren(CacheAs.Instance, flags: TTFlags.AllowNonControllerTypeForChildren)] public object PersistentData { get; set; }
    }









    //Recipe


    
    [RequiresSkill(typeof(BasicEngineeringSkill), 6)]
    [Ecopedia("Housing Objects", "Living Room", subPageName: "Orrery Mini Item")]
    public partial class OrreryMiniRecipe : RecipeFamily
    {
        public OrreryMiniRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "OrreryMini",  //noloc
                displayName: Localizer.DoStr("Orrery Mini"),

                
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(IronBarItem), 7, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                    new IngredientElement(typeof(IronPipeItem), 13, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                    new IngredientElement(typeof(WoodenGearItem), 42, true),
                    new IngredientElement(typeof(LubricantItem), 1, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                    new IngredientElement(typeof(ClayItem), 9, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                    new IngredientElement(typeof(OilPaintItem), 5, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                    new IngredientElement(typeof(BasaltItem), 12, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),
                },

                
                items: new List<CraftingElement>
                {
                    new CraftingElement<OrreryMiniItem>()
                });
            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 2; 

            this.LaborInCalories = CreateLaborInCaloriesValue(900, typeof(BasicEngineeringSkill));

            
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(OrreryMiniRecipe), start: 15f, skillType: typeof(BasicEngineeringSkill), typeof(BasicEngineeringFocusedSpeedTalent), typeof(BasicEngineeringParallelSpeedTalent));

           
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Orrery Mini"), recipeType: typeof(OrreryMiniRecipe));
            this.ModsPostInitialize();

            
            CraftingComponent.AddRecipe(tableType: typeof(WainwrightTableObject), recipe: this);
        }

        
        partial void ModsPreInitialize();

       
        partial void ModsPostInitialize();
    }
}
