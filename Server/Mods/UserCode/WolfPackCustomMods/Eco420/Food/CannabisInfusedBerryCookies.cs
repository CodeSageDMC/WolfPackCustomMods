// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Core.Items;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using System;
    using System.Collections.Generic;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Gameplay.Systems.TextLinks;
    using Eco.Core.Controller;
    using Eco.Gameplay.Settlements.ClaimStakes;
    using Eco.Gameplay.Items.Recipes;




    //FoodItem


    [Serialized]
    [LocDisplayName("Cannabis Infused Berry Cookies")]
    [Tag("Cannabis")]
    [Weight(100)]
    [MaxStackSize(420)]
    [Tag("Food")]
    [LocDescription("Cannabis-infused cookies made with huckleberries. ")]
    public partial class CannabisInfusedBerryCookiesItem : FoodItem
    {

        public override float Calories => 420;

        public override Nutrients Nutrition => new Nutrients()

        {
            Carbs = 27,
            Fat = 20,
            Protein = 2,
            Vitamins = 23
        };

        protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(72);

    }




    //Recipe


    [RequiresSkill(typeof(BakingSkill), 6)]

    public partial class CannabisInfusedBerryCookiesRecipe : RecipeFamily
    {
        public CannabisInfusedBerryCookiesRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "CannabisInfusedBerryCookies",  //noloc
                displayName: Localizer.DoStr("Cannabis Infused Berry Cookies"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(FlourItem), 24, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),                    
                    new IngredientElement(typeof(SugarItem), 15, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                    new IngredientElement(typeof(FlaxEggItem), 5, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                    new IngredientElement(typeof(CannabisCookingOilItem), 4, true),
                    new IngredientElement(typeof(HuckleberriesItem), 10, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),                   
                    
                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<CannabisInfusedBerryCookiesItem>(20),
                    new CraftingElement<JarItem>(4),
                    new CraftingElement<JarLidItem>(4),

                });

            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 1;

            this.LaborInCalories = CreateLaborInCaloriesValue(420);

            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(CannabisInfusedBerryCookiesRecipe),
                start: 6f,
                skillType: typeof(BakingSkill), typeof(BakingFocusedSpeedTalent), typeof(BakingParallelSpeedTalent));

            this.ModsPreInitialize();

            this.Initialize(displayText: Localizer.DoStr("Cannabis Infused Berry Cookies"), recipeType: typeof(CannabisInfusedBerryCookiesRecipe));

            this.ModsPostInitialize();

            CraftingComponent.AddRecipe(tableType: typeof(BakeryOvenObject), recipe: this);

        }
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }
}
