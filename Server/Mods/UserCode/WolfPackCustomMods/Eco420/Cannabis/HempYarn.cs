// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from ItemTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;





    //Item


    [Serialized]
    [LocDisplayName("Hemp Yarn")]
    [Weight(25)]
    [MaxStackSize(420)]
    [Ecopedia("Items", "Products", createAsSubPage: true)]
    [LocDescription("Hemp fibers spun into a usable string commonly known as Hemp yarn.")]
    public partial class HempYarnItem : PartItem, IRepairMaterial
    {
        public override IDynamicValue SkilledRepairCost => skilledRepairCost;
        private static IDynamicValue skilledRepairCost = new ConstantValue(1);


        public override LocString DisplayNamePlural { get { return Localizer.DoStr("Hemp Yarn"); } }
        public float ReducesMaxDurabilityByPercent => 0.005f;

    }




    //Recipe


    [RequiresSkill(typeof(TailoringSkill), 1)]
    [Ecopedia("Items", "Products", subPageName: "Hemp Yarn Item")]
    public partial class HempYarnRecipe : RecipeFamily
    {
        public HempYarnRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "HempYarn",  //noloc
                displayName: Localizer.DoStr("Hemp Yarn"),

                
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(HempFiberItem), 1, typeof(TailoringSkill), typeof(TailoringLavishResourcesTalent)),
                },

                
                items: new List<CraftingElement>
                {
                    new CraftingElement<HempYarnItem>(2)
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.1f; 
            
            
            this.LaborInCalories = CreateLaborInCaloriesValue(30, typeof(TailoringSkill));

            
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(HempYarnRecipe), start: 1, skillType: typeof(TailoringSkill), typeof(TailoringFocusedSpeedTalent), typeof(TailoringParallelSpeedTalent));

           
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Hemp Yarn"), recipeType: typeof(HempYarnRecipe));
            this.ModsPostInitialize();

            
            CraftingComponent.AddRecipe(tableType: typeof(TailoringTableObject), recipe: this);
        }

        partial void ModsPreInitialize();
        
        partial void ModsPostInitialize();
    }
        
}