// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;




    //Item


    [Serialized]
    [LocDisplayName("Grinder")]
    [Weight(100)]
    [MaxStackSize(420)]
    [LocDescription("A grinder for grinding herb.")]
    public partial class GrinderItem : Item
    {


    }



    //Recipe


    [RequiresModule(typeof(AnvilObject))]
    [RequiresSkill(typeof(SmeltingSkill), 5)]
    public partial class GrinderRecipe : RecipeFamily
    {
        public GrinderRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "Grinder",  //noloc
                displayName: Localizer.DoStr("Grinder"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(CopperBarItem), 2, typeof(SmeltingSkill), typeof(SmeltingLavishResourcesTalent)),
                    new IngredientElement(typeof(ClayMoldItem), 1, typeof(SmeltingSkill), typeof(SmeltingLavishResourcesTalent)),
                    new IngredientElement(typeof(OilPaintItem), 1, typeof(SmeltingSkill), typeof(SmeltingLavishResourcesTalent)),


                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<GrinderItem>(1)
                });
            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 1f;

            this.LaborInCalories = CreateLaborInCaloriesValue(420);


            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(GrinderRecipe), start: 2f, skillType: typeof(SmeltingSkill), typeof(SmeltingFocusedSpeedTalent), typeof(SmeltingParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Grinder"), recipeType: typeof(GrinderRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(BloomeryObject), recipe: this);
        }

        partial void ModsPreInitialize();

        partial void ModsPostInitialize();

    }
}