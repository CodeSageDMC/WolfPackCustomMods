// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from PluginModuleTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;





    //Item


    [Serialized]
    [LocDisplayName("Survivalist Upgrade")]
    [LocDescription("Basic Upgrade that greatly increases efficiency when crafting Self Improvement recipes.")]
    [Weight(42)]
    [Ecopedia("Upgrade Modules", "Specialty Upgrades", createAsSubPage: true)]
    [Tag("Upgrade")]
    public partial class SurvivalistUpgradeItem :
        EfficiencyModule
    {

        public SurvivalistUpgradeItem() : base(
            ModuleTypes.ResourceEfficiency | ModuleTypes.SpeedEfficiency,
            0.5f + 0.05f,
            typeof(SelfImprovementSkill),
            0.5f
        )
        { }
    }




    //Recipe Upgrade



    [RequiresSkill(typeof(SelfImprovementSkill), 7)]
    [Ecopedia("Upgrade Modules", "Specialty Upgrades", subPageName: "Survivalist Upgrade Item")]
    public partial class SurvivalistUpgradeRecipe : RecipeFamily
    {
        public SurvivalistUpgradeRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "SurvivalistUpgrade",  //noloc
                displayName: Localizer.DoStr("Survivalist Upgrade"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(BasicUpgradeLvl4Item), 1, true),
                },

              
                items: new List<CraftingElement>
                {
                    new CraftingElement<SurvivalistUpgradeItem>()
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 4; 

          
            this.LaborInCalories = CreateLaborInCaloriesValue(4200);

           
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(SurvivalistUpgradeRecipe), start: 10f, skillType: typeof(SelfImprovementSkill), typeof(SelfImprovementFocusedSpeedTalent), typeof(SelfImprovementParallelSpeedTalent));

          
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Survivalist Upgrade"), recipeType: typeof(SurvivalistUpgradeRecipe));
            this.ModsPostInitialize();

          
            CraftingComponent.AddRecipe(tableType: typeof(CannabisWorkbenchObject), recipe: this);
        }

        
        partial void ModsPreInitialize();

       
        partial void ModsPostInitialize();
    }






    


    //Recipe Downgrade



    [RequiresSkill(typeof(SelfImprovementSkill), 7)]
        public partial class SurvivalistDowngradeRecipe : RecipeFamily
    {
        public SurvivalistDowngradeRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "SurvivalistDowngrade",  //noloc
                displayName: Localizer.DoStr("Survivalist Downgrade"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(SurvivalistUpgradeItem), 1, true),
                },


                items: new List<CraftingElement>
                {
                    new CraftingElement<BasicUpgradeLvl4Item>()
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 4;


            this.LaborInCalories = CreateLaborInCaloriesValue(4200);


            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(SurvivalistDowngradeRecipe), start: 10f, skillType: typeof(SelfImprovementSkill), typeof(SelfImprovementFocusedSpeedTalent), typeof(SelfImprovementParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Survivalist Downgrade"), recipeType: typeof(SurvivalistDowngradeRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(CannabisWorkbenchObject), recipe: this);
        }


        partial void ModsPreInitialize();


        partial void ModsPostInitialize();
    }

}
