// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;
    using Eco.Gameplay.DynamicValues;




    //Item


    [Serialized]
    [LocDisplayName("Grow-Box Fan")]
    [Weight(100)]
    [MaxStackSize(420)]
    [LocDescription("A fan to keep the air circulated.")]
    public partial class GrowBoxFanItem : PartItem
    {
        public override IDynamicValue SkilledRepairCost => skilledRepairCost;
        private static IDynamicValue skilledRepairCost = new ConstantValue(1);


        public override LocString DisplayNamePlural { get { return Localizer.DoStr("Grow-Box Fans"); } }
        public float ReducesMaxDurabilityByPercent => 0.01f;

    }



    //Recipe


    [RequiresModule(typeof(ShaperObject))]
    [RequiresSkill(typeof(MechanicsSkill), 3)]
    public partial class GrowBoxFanRecipe : RecipeFamily
    {
        public GrowBoxFanRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "GrowBoxFan",  //noloc
                displayName: Localizer.DoStr("Grow-Box Fan"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(CopperBarItem), 6, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement(typeof(CopperPlateItem), 3, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement(typeof(ScrewsItem), 15, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement(typeof(CopperWiringItem), 10, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement(typeof(GearboxItem), 1, true),


                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<GrowBoxFanItem>(1)
                });
            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 1f;

            this.LaborInCalories = CreateLaborInCaloriesValue(420);


            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(GrowBoxFanRecipe), start: 7f, skillType: typeof(MechanicsSkill), typeof(MechanicsFocusedSpeedTalent), typeof(MechanicsParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Grow-Box Fan"), recipeType: typeof(GrowBoxFanRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(MachinistTableObject), recipe: this);
        }

        partial void ModsPreInitialize();

        partial void ModsPostInitialize();

    }
}