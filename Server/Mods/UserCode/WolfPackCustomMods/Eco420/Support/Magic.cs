// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;
    using Eco.Shared.Time;




    //FoodItem


    [Serialized]
    [LocDisplayName("Magic")]
    [Tag("Cannabis")]
    [Weight(42)]
    [MaxStackSize(420)]
    [Ecopedia("Items", "Products", subPageName: "Magic Item")]
    [LocDescription("The very essence of magic.")]
    public partial class MagicItem : FoodItem
    {

        public override float Calories => 0;

        public override Nutrients Nutrition => new Nutrients()

        {
            Carbs = 0,
            Fat = 0,
            Protein = 0,
            Vitamins = 0
        };

        protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(420);

    }



    //Recipe 1


    [RequiresSkill(typeof(SelfImprovementSkill), 2)]
    public partial class MagicRecipe : RecipeFamily
    {
        public MagicRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "Magic",  //noloc
                displayName: Localizer.DoStr("Meditate Magical Energy"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement("Food", 1, typeof(SelfImprovementSkill), typeof(SelfImprovementLavishResourcesTalent)),
                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<MagicItem>(7)
                });
            this.Recipes = new List<Recipe> { recipe };

            

            this.LaborInCalories = CreateLaborInCaloriesValue(420);

            
            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(MagicRecipe),
                start: 10f,
                skillType: typeof(SelfImprovementSkill), typeof(SelfImprovementFocusedSpeedTalent), typeof(SelfImprovementParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Meditate Magical Energy"), recipeType: typeof(MagicRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(WorkbenchObject), recipe: this);
            CraftingComponent.AddRecipe(tableType: typeof(CampsiteObject), recipe: this);
            

        }

        partial void ModsPreInitialize();

        partial void ModsPostInitialize();
    }





    //Recipe 2


    [RequiresSkill(typeof(SelfImprovementSkill), 4)]
    public partial class MagicExpandedRecipe : RecipeFamily
    {
        public MagicExpandedRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "MagicExpanded",  //noloc
                displayName: Localizer.DoStr("Meditate Magical Energy :P"),


                ingredients: new List<IngredientElement>
                {

                    new IngredientElement(typeof(BongItem), 1, true),
                    new IngredientElement(typeof(GroundCannabisItem), 4, true),
                    new IngredientElement(typeof(MatchesItem), 1, typeof(SelfImprovementSkill), typeof(SelfImprovementLavishResourcesTalent)),

                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<MagicItem>(20),
                    new CraftingElement<BongItem>(1)
                });
            this.Recipes = new List<Recipe> { recipe };



            this.LaborInCalories = CreateLaborInCaloriesValue(420);


            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(MagicRecipe),
                start: 10f,
                skillType: typeof(SelfImprovementSkill), typeof(SelfImprovementFocusedSpeedTalent), typeof(SelfImprovementParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Meditate Magical Energy :P"), recipeType: typeof(MagicRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(CannabisWorkbenchObject), recipe: this);


        }

        partial void ModsPreInitialize();

        partial void ModsPostInitialize();
    }



}