// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from WorldObjectTemplate.tt />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Core.Items;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Components.Auth;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Economy;
    using Eco.Gameplay.Housing;
    using Eco.Gameplay.Interactions;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Minimap;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Occupancy;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Property;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Gameplay.Pipes.LiquidComponents;
    using Eco.Gameplay.Pipes.Gases;
    using Eco.Shared;
    using Eco.Shared.Math;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Shared.Items;
    using Eco.Shared.Networking;
    using Eco.Gameplay.Pipes;
    using Eco.World.Blocks;
    using Eco.Gameplay.Housing.PropertyValues;
    using Eco.Gameplay.Civics.Objects;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems.NewTooltip;
    using Eco.Core.Controller;
    using Eco.Core.Utils;
    using Eco.Gameplay.Components.Storage;
    using static Eco.Gameplay.Housing.PropertyValues.HomeFurnishingValue;
    using Eco.Gameplay.Items.Recipes;

    [Serialized]
    [RequireComponent(typeof(OnOffComponent))]
    [RequireComponent(typeof(PropertyAuthComponent))]
    [RequireComponent(typeof(LinkComponent))]
    [RequireComponent(typeof(FuelSupplyComponent))]
    [RequireComponent(typeof(FuelConsumptionComponent))]
    [RequireComponent(typeof(HousingComponent))]
    [RequireComponent(typeof(OccupancyRequirementComponent))]
    [RequireComponent(typeof(ForSaleComponent))]   
    [Tag("Usable")]
    [Ecopedia("Housing Objects", "Outdoor", subPageName: "Bonfire Item")]
    public partial class BonfireObject : WorldObject, IRepresentsItem
    {
        public virtual Type RepresentedItemType => typeof(BonfireItem);
        public override LocString DisplayName => Localizer.DoStr("Bonfire");
        public override TableTextureMode TableTexture => TableTextureMode.Stone;
        private static string[] fuelTagList = new[] { "Burnable Fuel" }; //noloc

        protected override void Initialize()
        {
            this.ModsPreInitialize();
            this.GetComponent<FuelSupplyComponent>().Initialize(2, fuelTagList);
            this.GetComponent<FuelConsumptionComponent>().Initialize(1);
            this.GetComponent<HousingComponent>().HomeValue = BonfireItem.homeValue;
            this.ModsPostInitialize();
        }

       
        partial void ModsPreInitialize();
        
        partial void ModsPostInitialize();
    }

    [Serialized]
    [LocDisplayName("Bonfire")]
    [LocDescription("A big bonfire to sing and dance together koombaya ")]
    [Ecopedia("Housing Objects", "Outdoor", createAsSubPage: true)]
    [Tag("Housing")]
    [Weight(5000)]
    public partial class BonfireItem : WorldObjectItem<BonfireObject>
    {
        protected override OccupancyContext GetOccupancyContext => new SideAttachedContext(0 | DirectionAxisFlags.Down, WorldObject.GetOccupancyInfo(this.WorldObjectType));
        public override HomeFurnishingValue HomeValue => homeValue;
        public static readonly HomeFurnishingValue homeValue = new HomeFurnishingValue()
        {
            ObjectName = typeof(BonfireObject).UILink(),
            Category = HousingConfig.GetRoomCategory("Outdoor"),
            BaseValue = 5,
            TypeForRoomLimit = Localizer.DoStr("Bonfire"),
            DiminishingReturnMultiplier = 0.2f

        };

        [NewTooltip(CacheAs.SubType, 7)] public static LocString PowerConsumptionTooltip() => Localizer.Do($"Consumes: {Text.Info(1)}w of {new HeatPower().Name} power from fuel.");
    }

    
    [RequiresSkill(typeof(LoggingSkill), 3)]
    [Ecopedia("Housing Objects", "Outdoor", subPageName: "Bonfire Item")]
    public partial class BonfireRecipe : RecipeFamily
    {
        public BonfireRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "Bonfire",  //noloc
                displayName: Localizer.DoStr("Bonfire"),

               
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement("Rock", 20, typeof(LoggingSkill)),
                    new IngredientElement("Wood", 40, typeof(LoggingSkill)),
                    new IngredientElement(typeof(FlaxFiberItem), 5, typeof(LoggingSkill)),
                    new IngredientElement(typeof(MatchesItem), 1, typeof(LoggingSkill)),

                },

               
                items: new List<CraftingElement>
                {
                    new CraftingElement<BonfireItem>()
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 1f; 
            this.LaborInCalories = CreateLaborInCaloriesValue(100, typeof(LoggingSkill));

          
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(BonfireRecipe), start: 2f, skillType: typeof(LoggingSkill), typeof(LoggingFocusedSpeedTalent), typeof(LoggingParallelSpeedTalent));

            
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Bonfire"), recipeType: typeof(BonfireRecipe));
            this.ModsPostInitialize();

            
            CraftingComponent.AddRecipe(tableType: typeof(WorkbenchObject), recipe: this);
        }

  
        partial void ModsPreInitialize();

        
        partial void ModsPostInitialize();
    }
}
