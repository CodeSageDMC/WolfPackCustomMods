// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Core.Items;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using System;
    using System.Collections.Generic;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Gameplay.Systems.TextLinks;
    using Eco.Core.Controller;
    using Eco.Gameplay.Settlements.ClaimStakes;
    using Eco.Gameplay.Items.Recipes;


    


    //Item

    [Serialized] // Tells the save/load system this object needs to be serialized. 
    [LocDisplayName("Natural Food Coloring")] // Defines the localized name of the FoodColoring.
    [Weight(300)] // Defines how heavy the FoodColoring is.

    [Ecopedia("Food", "Product", createAsSubPage: true)]
    [LocDescription("A different assortment of natural food coloring.")] //The tooltip description for the food FoodColoring.
    public partial class FoodColoringItem : FoodItem
    {


          public override float Calories => 0;
          public override Nutrients Nutrition => new Nutrients() 
          { 
              Carbs = 0, 
              Fat = 0, 
              Protein = 0, 
              Vitamins = 0 
          };
          protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(300);
    }


    //Recipe


    [RequiresSkill(typeof(BiochemistSkill), 2)]
    [Ecopedia("Food", "Ingredient", subPageName: "Food Coloring Item")]
    public partial class FoodColoringRecipe : RecipeFamily
    {
        public FoodColoringRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "FoodColoring",  //noloc
                displayName: Localizer.DoStr("Natural Food Coloring"),

               
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(BeetItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(PlantFibersItem), 40, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(StrawberryItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(RaspberryItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(BlueberryItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(BlackberryItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(CherryItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(CabbageItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(SpicesItem), 40, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),



                },

                
                items: new List<CraftingElement>
                {
                    new CraftingElement<FoodColoringItem>(100),
                    
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 1; 

            
            this.LaborInCalories = CreateLaborInCaloriesValue(800, typeof(BiochemistSkill));

            
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(FoodColoringRecipe), start: 6f, skillType: typeof(BiochemistSkill), typeof(BiochemistFocusedSpeedTalent), typeof(BiochemistParallelSpeedTalent));

            
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Natural Food Coloring"), recipeType: typeof(FoodColoringRecipe));
            this.ModsPostInitialize();

            
            CraftingComponent.AddRecipe(tableType: typeof(ChemicalLaboratoryObject), recipe: this);
        }

        
        partial void ModsPreInitialize();

        
        partial void ModsPostInitialize();
    }



}
