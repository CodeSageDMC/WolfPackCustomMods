// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Core.Items;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using System;
    using System.Collections.Generic;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Gameplay.Systems.TextLinks;
    using Eco.Core.Controller;
    using Eco.Gameplay.Settlements.ClaimStakes;
    using Eco.Gameplay.Items.Recipes;




    //FoodItem


    [Serialized]
    [LocDisplayName("Jar of Peanut Butter")]
    [Weight(200)]
    [Tag("Food")]
    [Ecopedia("Food", "Product", createAsSubPage: true)]
    [LocDescription("Creamy Peanut Butter.")]
    public partial class PeanutButterItem : FoodItem
    {

        public override float Calories => 1300;

        public override Nutrients Nutrition => new Nutrients()

        {
            Carbs = 10,
            Fat = 20,
            Protein = 10,
            Vitamins = 0
        };

        protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(72);

    }




    //Recipe


    [RequiresSkill(typeof(MillingSkill), 5)]
    [Ecopedia("Food", "Product", subPageName: "Peanut Butter Item")]
    public partial class PeanutButterRecipe : RecipeFamily
    {
        public PeanutButterRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "PeanutButter",  //noloc
                displayName: Localizer.DoStr("Peanut Butter"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(RoastedPeanutsItem), 20, typeof(MillingSkill), typeof(MillingLavishResourcesTalent)),
                    new IngredientElement(typeof(SugarItem), 5, typeof(MillingSkill), typeof(MillingLavishResourcesTalent)),
                    new IngredientElement(typeof(HoneyItem), 2, typeof(MillingSkill), typeof(MillingLavishResourcesTalent)),
                    new IngredientElement(typeof(JarItem), 2, true),
                    new IngredientElement(typeof(JarLidItem), 2, true),
                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<PeanutButterItem>(2),
                    
                });

            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 1;

            this.LaborInCalories = CreateLaborInCaloriesValue(500, typeof(MillingSkill));

            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(PeanutButterRecipe),
                start: 5f,
                skillType: typeof(MillingSkill), typeof(MillingFocusedSpeedTalent), typeof(MillingParallelSpeedTalent));

            this.ModsPreInitialize();

            this.Initialize(displayText: Localizer.DoStr("Peanut Butter"), recipeType: typeof(PeanutButterRecipe));

            this.ModsPostInitialize();

            CraftingComponent.AddRecipe(tableType: typeof(MillObject), recipe: this);

        }
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }
}
