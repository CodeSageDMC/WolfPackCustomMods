// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;    
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;    
    using Eco.Gameplay.Skills;
    using Eco.Shared.Time;    
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;    
    using Eco.Gameplay.Items.Recipes;




    //Item


    [Serialized]
    [LocDisplayName("Glass Beakers")]
    [Weight(100)]
    
    [Ecopedia("Items", "Products", subPageName: "Glass Beakers Item")]
    [LocDescription("Glass made into beakers for the lab.")]
    public partial class GlassBeakersItem : PartItem
    {
        public override IDynamicValue SkilledRepairCost => skilledRepairCost;
        private static IDynamicValue skilledRepairCost = new ConstantValue(1);
        public float ReduceMaxDurabilityByPercent => 0.05f;
    }




    //Recipe


    [RequiresSkill(typeof(GlassworkingSkill), 4)]
    [Ecopedia("Items", "Products", subPageName: "Glass Beakers Item")]
    public partial class GlassBeakersRecipe : RecipeFamily
    {
        public GlassBeakersRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "GlassBeakers",  //noloc
                displayName: Localizer.DoStr("Glass Beakers"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(GlassItem), 1, typeof(GlassworkingSkill), typeof(GlassworkingLavishResourcesTalent)),
                    
                },
                        
                items: new List<CraftingElement>
                {
                    new CraftingElement<GlassBeakersItem>(4),
                });

            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.5f; 

            
            this.LaborInCalories = CreateLaborInCaloriesValue(15, typeof(GlassworkingSkill));

            
            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(GlassBeakersRecipe), 
                start: 1f, 
                skillType: typeof(GlassworkingSkill), typeof(GlassworkingFocusedSpeedTalent), typeof(GlassworkingParallelSpeedTalent) );

            
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Glass Beakers"), recipeType: typeof(GlassBeakersRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(GlassworksObject), recipe: this);
        }

    partial void ModsPreInitialize();

    partial void ModsPostInitialize();
    }
}