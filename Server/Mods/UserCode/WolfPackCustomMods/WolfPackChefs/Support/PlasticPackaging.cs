// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;




    //Item


    [Serialized]
    [LocDisplayName("Plastic Packaging")]
    [Weight(100)]
    [Ecopedia("Items", "Products", subPageName: "Plastic Packaging Item")]
    [LocDescription("Plastic, rolled out in sheets, and made into packaging.")]
    public partial class PlasticPackagingItem : Item
    {

    }





    //Recipe


    [RequiresSkill(typeof(PaintingSkill), 6)]
    [Ecopedia("Items", "Products", subPageName: "Plastic Packaging Item")]
    public partial class PlasticPackagingRecipe : RecipeFamily
    {
        public PlasticPackagingRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "PlasticPackaging",  //noloc
                displayName: Localizer.DoStr("Plastic Packaging"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(PlasticItem), 30, typeof(PaintingSkill), typeof(PaintingLavishResourcesTalent)),
                },
                        
                items: new List<CraftingElement>
                {
                    new CraftingElement<PlasticPackagingItem>(100),
                });

            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 2f; 

            
            this.LaborInCalories = CreateLaborInCaloriesValue(500, typeof(PaintingSkill));

            
            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(PlasticPackagingRecipe), 
                start: 5f, 
                skillType: typeof(PaintingSkill), typeof(PaintingFocusedSpeedTalent), typeof(PaintingParallelSpeedTalent) );

            
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Plastic Packaging"), recipeType: typeof(PlasticPackagingRecipe));
            this.ModsPostInitialize();


    CraftingComponent.AddRecipe(tableType: typeof(PaperMachineObject), recipe: this);
    }

    partial void ModsPreInitialize();

    partial void ModsPostInitialize();
}
}