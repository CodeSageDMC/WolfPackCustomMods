// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Time;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;




    //Item


    [Serialized]
    [LocDisplayName("Aluminum Crystals")]
    [Weight(100)]

    [Ecopedia("Items", "Products", subPageName: "Aluminum Crystals Item")]
    [LocDescription("Aluminum crystals extracted from clay.")]
    public partial class AluminumCrystalsItem : Item
    {
        
    }




    //Recipe


    [RequiresSkill(typeof(BiochemistSkill), 1)]
    [Ecopedia("Items", "Products", subPageName: "Aluminum Crystals Item")]
    public partial class AluminumCrystalsRecipe : RecipeFamily
    {
        public AluminumCrystalsRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "AluminumCrystals",  //noloc
                displayName: Localizer.DoStr("Aluminum Crystals"),


                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(ClayItem), 20, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),
                    new IngredientElement(typeof(NitricAcidItem), 1, typeof(BiochemistSkill), typeof(BiochemistLavishResourcesTalent)),

                },

                items: new List<CraftingElement>
                {
                    new CraftingElement<AluminumCrystalsItem>(5),
                });

            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.5f;


            this.LaborInCalories = CreateLaborInCaloriesValue(50, typeof(BiochemistSkill));


            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(AluminumCrystalsRecipe),
                start: 1f,
                skillType: typeof(BiochemistSkill), typeof(BiochemistFocusedSpeedTalent), typeof(BiochemistParallelSpeedTalent));


            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Aluminum Crystals"), recipeType: typeof(AluminumCrystalsRecipe));
            this.ModsPostInitialize();


            CraftingComponent.AddRecipe(tableType: typeof(LabObject), recipe: this);
        }

        partial void ModsPreInitialize();

        partial void ModsPostInitialize();
    }
}