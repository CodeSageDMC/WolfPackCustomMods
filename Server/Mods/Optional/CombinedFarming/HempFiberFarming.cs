// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from ItemTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Settlements;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;





    //Item


    [Serialized]
    [LocDisplayName("Hemp Fiber")]
    [Weight(60)]
    [MaxStackSize(420)]
    [Ecopedia("Items", "Products", createAsSubPage: true)]
    [LocDescription("Processed fibers of Hemp ready to be spun into yarn.")]
    public partial class HempFiberItem : Item
    {


    }




    //Recipe


    [RequiresSkill(typeof(FarmingSkill), 2)]
    [Ecopedia("Items", "Products", subPageName: "Hemp Fiber Item")]
    public partial class HempFiberRecipe : RecipeFamily
    {
        public HempFiberRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "HempFiber",  //noloc
                displayName: Localizer.DoStr("Hemp Fiber"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(CannabisLeavesItem), 3, typeof(FarmingSkill)),
                },

              
                items: new List<CraftingElement>
                {
                    new CraftingElement<HempFiberItem>(1),
                    new CraftingElement<PlantFibersItem>(0.25f),
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.2f; 
            
           
            this.LaborInCalories = CreateLaborInCaloriesValue(35, typeof(FarmingSkill));


            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(HempFiberRecipe), start: 1, skillType: typeof(FarmingSkill));
          
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Hemp Fiber"), recipeType: typeof(HempFiberRecipe));
            this.ModsPostInitialize();

           
            CraftingComponent.AddRecipe(tableType: typeof(FiberScutchingStationObject), recipe: this);
        }

       
        partial void ModsPreInitialize();

        
        partial void ModsPostInitialize();
    }
       
}